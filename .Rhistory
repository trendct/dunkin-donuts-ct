abline(dcm_lm)
plot(dc$Population, dc$Dunkin.Donuts)
abline(dcm_lm)
View(ct)
View(dc)
dcct <- dc %>% filter(State=="CT")
library(dplyr)
dcct <- dc %>% filter(State=="CT")
View(dcct)
ctpop <- read.csv("ctpop.csv", stringsAsFactors=FALSE)
View(ctpop)
ctpop$ddmodel <- .0001692* ctpop$totalpopulation + .08
View(ctpop)
ctpop$ddmodel <- .0001692 * ctpop$totalpopulation + .08
ctpop$ddmodel <- .0001692 * ctpop$total + .08
View(ctpop)
View(dcct)
View(ctpop)
colnames(ctpop) <- c("name", "totalpop", "ddmodel")
newct <- left_join(ctpop, dcct)
colnames(ctpop) <- c("Name", "totalpop", "ddmodel")
newct <- left_join(ctpop, dcct)
View(ctpop)
colnames(ctpop) <- c("Towns", "totalpop", "ddmodel")
newct <- left_join(ctpop, dcct)
View(newct)
newct$diff <- newct$ddmodel - newct$Dunkin.Donuts
View(newct)
newct$diffrounded <- round(newct$diff, digits=0)
View(newct)
newct <- newct[order(-newct$diffrounded),]
View(newct)
write.csv(newct,"newct.csv")
plot(dc$Population, dc$Dunkin.Donuts)
abline(dcm_lm)
p <- ggplot(data=dc, aes(x=Dunkin.Donuts, y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
library(dplyr)
require(stringr)
require(gtools)
require(ggplot2)
require(rgdal)
require(scales)
require(ggmap)
require(Cairo)
require(gpclib)
require(maptools)
require(reshape)
gpclibPermit()
gpclibPermitStatus()
towntracts <- readOGR(dsn="townsmap", layer="towns")
towntracts <- fortify(towntracts, region="NAME10")
colnames(combined) <- c("row","name","n","id","pop2013","percapita")
rename(combined, real.town.name=id)
combined <- read.csv("combined.csv", stringsAsFactors=FALSE)
combined$percapita <- (combined$n/combined$pop2013)*1000
combined$percapita <- round(combined$percapita, digits=2)
combined <- combined[order(-combined$percapita),]
combined$real.town.name <- str_to_title(combined$real.town.name)
combined$id <- combined$real.time.name
colnames(combined) <- c("row","name","n","id","pop2013","percapita")
rename(combined, real.town.name=id)
ctnamecleaner(name, ct)
combined <- read.csv("combined.csv", stringsAsFactors=FALSE)
combined$percapita <- (combined$n/combined$pop2013)*1000
combined$percapita <- round(combined$percapita, digits=2)
combined <- combined[order(-combined$percapita),]
combined$real.town.name <- str_to_title(combined$real.town.name)
combined$id <- combined$real.time.name
towntracts <- readOGR(dsn="townsmap", layer="towns")
towntracts <- fortify(towntracts, region="NAME10")
colnames(combined) <- c("row","name","n","id","pop2013","percapita")
rename(combined, real.town.name=id)
Dunk_Data <- left_join(towntracts, combined)
dd <- ggplot() +
geom_polygon(data = Dunk_Data, aes(x=long, y=lat, group=group,
fill=percapita), color = "black", size=0.2) +
coord_map() +
scale_fill_distiller(type="seq", palette = "Reds", breaks=pretty_breaks(n=5)) +
theme_nothing(legend=TRUE) +
labs(title="Dunkin' Donut stores per 10,000 residents", fill="")
dd
p <- ggplot(data=dc, aes(x=Dunkin.Donuts, y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
p <- ggplot(data=dc, aes(x=Dunkin.Donuts, y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, Population ~ log(Dunkin.Donuts)) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p <- ggplot(data=dc, aes(x=log(Dunkin.Donuts), y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
p <- ggplot(data=dc, aes(x=poly(Dunkin.Donuts), y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
p <- ggplot(data=dc, aes(x=Dunkin.Donuts, y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, formula = Population ~ poly(Dunkin.Donuts, 2), size=1) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
p <- ggplot(data=dc, aes(x=Dunkin.Donuts, y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
p <- ggplot(data=dc, aes(x=log(Dunkin.Donuts), y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
p <- ggplot(data=dc, aes(x=Dunkin.Donuts, y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
p <- ggplot(data=dc, aes(x=Dunkin.Donuts, y=log(Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
p <- ggplot(data=dc, aes(x=Dunkin.Donuts, y=log(Population))) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
p <- ggplot(data=dc, aes(x=Dunkin.Donuts, y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
View(dc)
dcnotboston <- subset(dc, Town!="Boston")
dcnotboston <- subset(dc, town!="Boston")
dcnotboston <- subset(dc, Towns!="Boston")
p <- ggplot(data=dcnotboston, aes(x=Dunkin.Donuts, y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +
theme_minimal() +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
ddp <- plotly()
library(plotly)
library(extrafont)
library(extrafontdb)
p <- ggplot(data=dcnotboston, aes(x=Dunkin.Donuts, y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +
theme_minimal() +
theme(text=element_text(family="Lato", size=14)) +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
library(ggplot)
library(ggplot2)
library(plotly)
p <- ggplot(data=dcnotboston, aes(x=Dunkin.Donuts, y=Population)) +
geom_point(aes(text=paste(Towns, State, sep=", ")))+
geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +
theme_minimal() +
theme(text=element_text(family="Lato", size=14)) +
ggtitle("Dunkin' Donuts versus town population in New England") +
labs(y="Population", x="Dunkin' Donuts")
p
ddp <- plotly()
ddpy <- ddp$ggplotly(p)
dcm_lm <- lm(dcnotboston$Population ~ poly(dcnotboston$Dunkin.Donuts, 2))
summary(dcm_lm)
dcm_lm <- lm(dcnotboston$Dunkin.Donuts ~ poly(dcnotboston$Population, 2))
summary(dcm_lm)
dcm_lm1 <- lm(dcnotboston$Population ~ dcnotboston$Dunkin.Donuts)
dcm_lm2 <- lm(dcnotboston$Population ~ poly(dcnotboston$Dunkin.Donuts, 2))
dcm_lm3 <- lm(dcnotboston$Population ~ poly(dcnotboston$Dunkin.Donuts, 3))
summary(dcm_lm1)
summary(dcm_lm3)
dcm_lm2 <- lm(dcnotboston$Population ~ poly(dcnotboston$Dunkin.Donuts, 2))
summary(dcm_lm2)
dcm_lm2 <- lm(dcnotboston$Population ~ poly(dcnotboston$Dunkin.Donuts, 2, raw=TRUE))
dcm_lm3 <- lm(dcnotboston$Population ~ poly(dcnotboston$Dunkin.Donuts, 3, raw=TRUE))
summary(dcm_lm2)
summary(dcm_lm2)
summary(dcm_lm3)
population <- 182669
dunkinsss <-   2738.77 + 4405.57(population) + 81.51*(population)^2
population
dunkinsss <-   2738.77 + 4405.57*(population) + 81.51*(population)^2
dunkinsss <-   2738.77 + 4405.57*(5) + 81.51*(5)^2
View(dcnotboston)
dcnotboston$prediction <- predict(dcm_lm, dcnotboston$Population)
dcnotboston$prediction <- predict(dcm_lm2, dcnotboston$Population)
head(dcnotboston$Population)
summary(dcm_lm2)
new <- data.frame(Population = dcnotboston$Population)
dcnotboston$prediction <- predict(dcm_lm2, newdata = new, interval="confidence")
View(dcnotboston)
head(new)
dcm_lm <- lm(dcnotboston$Population ~ poly(dcnotboston$Dunkin.Donuts, 2))
summary(dcm_lm)
dcm_lm2 <- lm(dcnotboston$Dunkin.Donuts ~ poly(dcnotboston$Population, 2, raw=TRUE))
dcnotboston$prediction <- predict(dcm_lm2, newdata = new, interval="confidence")
View(dcnotboston)
dcm_lm2 <- lm(dcnotboston$Dunkin.Donuts ~ poly(dcnotboston$Population, 2))
summary(dcm_lm2)
ct <- dunk %>% filter(state=="CT")
library(dplyr)
ct <- dunk %>% filter(state=="CT")
View(ct)
ctpop <- read.csv("ctpop.csv")
ct <- dunk %>% filter(state=="CT") %>% count(city)
colnames(ct) <- c("name", "n")
ct_test <- left_join(ct, ctpop)
View(ct_test)
ctpop <- read.csv("ctpop.csv")
combined <- read.csv("combined.csv", stringsAsFactors=FALSE)
View(combined)
new <- data.frame(Population = ct_test$pop2013)
dcnotboston$prediction <- predict(dcm_lm2, newdata = new, interval="confidence")
View(dcnotboston)
dcnotboston$prediction <- NULL
dcnotboston$prediction <- predict(dcm_lm2, newdata = new, interval="confidence")
View(dcnotboston)
new <- data.frame(Population = ct_test$pop2013)
combined$prediction <- predict(dcm_lm2, newdata = new, interval="confidence")
View(combined)
summary(dcm_lm2)
new <- data.frame(Population = dcnotboston$Population)
head(new)
dcnotboston$prediction <- NULL
dcnotboston$prediction <- predict(dcm_lm2, newdata = new, interval="confidence")
View(dcnotboston)
dammit <- predict(dcm_lm2, newdata = new, interval="confidence")
head(dammit)
damn <- rbind(dcnotboston, dammit)
damn <- cbind(dcnotboston, dammit)
View(damn)
damn$prediction <- null
damn$prediction <- NULL
View(damn)
damnct <- damn %>% filter(State=="CT")
View(damnct)
damnct$rounded <- round(damnct$upr, digits=0)
View(damnct)
damnct$prediction <-damnct$rounded - damnct$Dunkin.Donuts
View(damnct)
write.csv(damnct, "damnct.csv")
View(damn)
damn<- damn[order(-damn$Towns),]
damn<- damn[order(damn$Towns),]
View(damn)
dunk <- read.csv("dunkindonuts.csv")
library(dplyr)
ctmap <- readShapeLines("townsmap/towns.shp")
library(rgeos)
ctmap <- readShapeLines("townsmap/towns.shp")
library(maptools)
ctmap <- readShapeLines("townsmap/towns.shp")
View(dunk)
new_england <- subset(dunk, state=="CT" |
state=="RI" |
state=="MA" |
state=="VT" |
state=="NH" |
state=="ME")
ct <- subset(new_england, state=="CT")
ct <- dunk %>% filter(state=="CT") %>% count(city)
View(ct)
ct <- dunk %>% filter(state=="CT")
View(ct)
plot(ct$lat, ct$lng)
write.csv(ct, "ctlist.csv")
require(leaflet)
require(dplyr)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-71.101936, lat=42.348799, popup="Storytelling with Data")
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-71.101936, lat=42.348799, popup="Storytelling with Data")
m  # Print the map
m <- leaflet(sbux) %>% addTiles()
m %>% setView(-98.964844, 38.505191, zoom = 7)
m %>% addCircles(~lon, ~lat)
# Close, but needs some cleaning up. Add some map customization
# Add custom map tiles -- look up here http://homepage.ntlworld.com/keir.clarke/leaflet/leafletlayers.htm
m <- leaflet(sbux) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m %>% setView(-98.964844, 38.505191, zoom = 4)
m %>% addCircles(~lon, ~lat, weight = 2, radius=1, color = "#008000", stroke = FALSE, fillOpacity = 0.5)
# Alright, let's bring it together. We need to put them on one dataframe
# Take just the latitude and longitude columns in Starbucks (and state, too)
sb <- sbux[,c("lat", "lon", "City", "Province")]
# Need a seperate column to distinguish between SB and DD when joined
sb$type <- "Starbucks"
head(sb)
dd <- dunk[,c("lat", "lng", "city", "state")]
dd$type <- "Dunkin' Donuts"
# Bring them together!
# sbdd <- rbind(sb, dd)
# Error?? Oh right, the columns are named differently.
colnames(sb) <- c("lat","lng","city", "state","type")
# OK, try it again
sbdd <- rbind(sb, dd)
# Back to leaflet! because it was so pretty
#First, turn Type into a factor, and do some fancy work to assign a color per type
sbdd$type <- as.factor(sbdd$type)
levels(sbdd$type)
cols2 <- c("#FF8000", "#00ff00")
sbdd$colors <- cols2[unclass(sbdd$type)]
# new leaflet code. so exciting
m <- leaflet(sbdd) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m %>% setView(-98.964844, 38.505191, zoom = 4)
m %>% addCircles(~lng, ~lat, weight = 1, radius=1,
color=~colors, stroke = FALSE, fillOpacity = 0.3)
m <- leaflet(sbdd) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m
m %>% setView(-98.964844, 38.505191, zoom = 4)
m %>% setView(-72.690940, 41.651426, zoom = 8)
View(ct)
m %>% addCircles(~lng, ~lat, weight = 1, radius=1,
color=#ffa500", stroke = FALSE, fillOpacity = 0.3)
m %>% addCircles(~lng, ~lat, weight = 1, radius=1,
color="#ffa500", stroke = FALSE, fillOpacity = 0.3)
m %>% addCircles(~lng, ~lat, weight = 1, radius=2,
color="#ffa500", stroke = FALSE, fillOpacity = 0.8)
m %>% addCircles(~lng, ~lat, weight = 3, radius=2,
color="#ffa500", stroke = FALSE, fillOpacity = 0.8)
m %>% addCircles(~lng, ~lat, weight = 3, radius=4,
color="#ffa500", stroke = FALSE, fillOpacity = 0.8)
m %>% addCircles(~lng, ~lat, weight = 3, radius=40,
color="#ffa500", stroke = FALSE, fillOpacity = 0.8)
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, weight = 3, radius=40,
color="#ffa500", stroke = FALSE, fillOpacity = 0.8)
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, weight = 30, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, weight = 10, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
require(leaflet)
require(dplyr)
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
# new leaflet code. so exciting
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-72.690940, lat=41.651426)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-72.690940, lat=41.651426, zoom = 8)
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(-72.690940, 41.651426, zoom = 8)
m
m <- leaflet() %>%
setView(-72.690940, 41.651426, zoom = 8)
addTiles() %>%  # Add default OpenStreetMap map tiles
m  # Print the map
m <- leaflet() %>%
setView(-72.690940, 41.651426, zoom = 8)
addTiles() %>%  # Add default OpenStreetMap map tiles
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(-72.690940, 41.651426, zoom = 8)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(-72.690940, 41.651426, zoom = 8)
addMarkers(lng=-72.690940, lat=41.651426, popup="<b>Hello</b><br><a href='http://www.trendct.org'>-TrendCT.org</a>")
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(-72.690940, 41.651426, zoom = 8) %>%
addMarkers(lng=-72.690940, lat=41.651426, popup="<b>Hello</b><br><a href='http://www.trendct.org'>-TrendCT.org</a>")
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(-72.690940, 41.651426, zoom = 8)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%
setView(-72.690940, 41.651426, zoom = 8) %>%
addMarkers(lng=-72.690940, lat=41.651426, popup="<b>Hello</b><br><a href='http://www.trendct.org'>-TrendCT.org</a>")
m
write.csv(ct, "ctlist.csv")
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
View(ct)
ct$type <- "Dunkin' Donuts"
# new leaflet code. so exciting
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
m %>% setView(-72.690940, 41.651426, zoom = 8)
m %>% addCircles(~lng, ~lat, popup=type, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m %>% addCircles(~lng, ~lat, popup=ct$type, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
?addlegend
?addLegend
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>')
%>% setView(-72.690940, 41.651426, zoom = 8)
%>% addCircles(~lng, ~lat, popup=ct$type, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
setView(-72.690940, 41.651426, zoom = 8) %>%
addCircles(~lng, ~lat, popup=ct$type, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m
?addLegend
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
setView(-72.690940, 41.651426, zoom = 8) %>%
addCircles(~lng, ~lat, popup=ct$type, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8) %>%
addLegend("bottomright", colors="#ffa500", title="In Connecticut")
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
setView(-72.690940, 41.651426, zoom = 8) %>%
addCircles(~lng, ~lat, popup=ct$type, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8) %>%
addLegend("bottomright", colors="#ffa500", values=type, title="In Connecticut")
# new leaflet code. so exciting
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
setView(-72.690940, 41.651426, zoom = 8) %>%
addCircles(~lng, ~lat, popup=ct$type, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8) %>%
addLegend("bottomright", colors="#ffa500", labels=palette(),  title="In Connecticut")
palette()
?addLegend
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
setView(-72.690940, 41.651426, zoom = 8) %>%
addCircles(~lng, ~lat, popup=ct$type, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8)
m %>%  addLegend("bottomright",title="In Connecticut")
m %>%  addLegend("bottomright", color= "#ffa500", title="In Connecticut")
m %>%  addLegend("bottomright", colors= "#ffa500", title="In Connecticut")
?addLegend
m
m %>%  addLegend("bottomright", colors= c("#ffa500", "#ffa500"), title="In Connecticut")
m %>%  addLegend("bottomright", colors= "#ffa500", labels="Dunkin' Donuts", title="In Connecticut")
m %>%  addLegend("bottomright", colors= "#ffa500", labels="Dunkin'Donuts", title="In Connecticut")
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
setView(-72.690940, 41.651426, zoom = 8) %>%
addCircles(~lng, ~lat, popup=ct$type, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8) %>%
addLegend("bottomright", colors= "#ffa500", labels="Dunkin' Donuts", title="In Connecticut")
m
m <- leaflet(ct) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
setView(-72.690940, 41.651426, zoom = 8) %>%
addCircles(~lng, ~lat, popup=ct$type, weight = 3, radius=40,
color="#ffa500", stroke = TRUE, fillOpacity = 0.8) %>%
addLegend("bottomright", colors= "#ffa500", labels="Dunkin'", title="In Connecticut")
m
