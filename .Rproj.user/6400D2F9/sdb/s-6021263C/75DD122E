{
    "contents" : "---\ntitle: \"Analysis of Dunkin' Donuts in Connecticut and New England\"\nauthor: \"Andrew Ba Tran\"\ndate: \"June 24, 2015\"\noutput: html_document\n---\n\nThis analysis accompanies the TrendCT.org story: [Dunkin’ Donuts owns name rights to Hartford ball park, already owns New England](http://trendct.org/2015/06/15/dunkin-donuts-owns-rights-to-hartford-stadium-already-owns-new-england/)\n\nHere’s the raw data we [pulled and cleaned](https://github.com/trendct/dunkin-donuts-ct/blob/master/dunkindonuts.csv) from [DunkinDonuts.com](http://www.dunkindonuts.com).\n\n***\n\n#### Let's start out by mapping out all the Dunkin' Donuts locations\n\n```{r fig.width=7, fig.height=6, out.width=900,out.height=600}\nlibrary(leaflet)\ndunk <- read.csv(\"dunkindonuts.csv\", stringsAsFactors=FALSE)\nleaflet(dunk) %>% addTiles('http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>') %>% \n  setView(-98.557087, 39.810502, zoom = 4) %>% \n  addCircles(~lng, ~lat, weight = 1, radius=3, \n                 color=\"#ffa500\", stroke = FALSE, fillOpacity = 0.8)\n\n\n```\n\n***\n\n#### Let's look specifically at Connecticut\n\n***\n\n\n```{r fig.width=7, fig.height=6, out.width=900,out.height=600}\nlibrary(dplyr)\nlibrary(ctnamecleaner)\nlibrary(stringr)\nct <- dunk %>% filter(state==\"CT\") %>% count(city)\n\nctnamecleaner(city, ct)\n\nct <- data.frame(tapply(CTDATA$n, CTDATA$real.town.name, sum))\nct$town <- rownames(ct)\ncolnames(ct) <- c(\"Dunkins\", \"id\")\n\nctpopulator(id, ct)\n\nct <- CTPOPULATED\nct$percapita <- (ct$Dunkins/ct$pop2013)*10000\nct$percapita <- round(ct$percapita, digits=2)\nct$id <- str_to_title(ct$id)\n\nrequire(gtools)\nrequire(ggplot2)\nrequire(rgdal)\nrequire(scales)\nrequire(ggmap)\nrequire(Cairo)\nrequire(gpclib)\nrequire(maptools)\nrequire(reshape)\ngpclibPermit()\ngpclibPermitStatus()\n\ntowntracts <- readOGR(dsn=\"townsmap\", layer=\"towns\")\ntowntracts <- fortify(towntracts, region=\"NAME10\")\n\nDunk_Data <- left_join(towntracts, ct)\n\nDunk_Data$Dunkins <- as.numeric(Dunk_Data$Dunkins)\nDunk_Data$percapita <- as.numeric(Dunk_Data$percapita)\n\ndd <- ggplot() +\n  geom_polygon(data = Dunk_Data, aes(x=long, y=lat, group=group, \n                                         fill=percapita), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", palette = \"Reds\", breaks=pretty_breaks(n=5)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Dunkin' Donuts stores per 10,000 residents\", fill=\"\")\ndd\n\ndd_all <- ggplot() +\n  geom_polygon(data = Dunk_Data, aes(x=long, y=lat, group=group, \n                                         fill=Dunkins), color = \"black\", size=0.2) +\n  coord_map() +\n  scale_fill_distiller(type=\"seq\", palette = \"Reds\", breaks=pretty_breaks(n=5)) +\n  theme_nothing(legend=TRUE) +\n  labs(title=\"Total Dunkin' Donuts by town\", fill=\"\")\ndd_all\n\n```\n\n***\n\n####Analysis for Connecticut \n```{r fig.width=7, fig.height=6, out.width=900,out.height=600}\nlibrary(DT)\nct <- ct[c(\"id\", \"pop2013\", \"Dunkins\", \"percapita\")]\ncolnames(ct) <- c(\"Town\", \"Population\", \"Dunkins\", \"Per Capita\")\ndatatable(ct)\n\n```\n\n***\n\n### Expanding scope to New England\n\n```{r fig.width=7, fig.height=6, out.width=900,out.height=600}\ndc <- read.csv(\"DunkinCount.csv\", stringsAsFactors=FALSE)\ndc_table <- dc[c(\"Towns\", \"State\", \"Population\", \"Dunkin.Donuts\",\"Per.1.000.residents\")]\ncolnames(dc_table) <- c(\"Town\", \"State\",\"Population\",\"Dunkins\", \"Per Capita\")\ndatatable(dc_table)\n```\n\n***\n\n###Is there a correlation between a town's population and number of Dunkin' Donuts?\n\n```{r fig.width=7, fig.height=6, out.width=900,out.height=600}\n\nddne <- ggplot(data=dc, aes(x=Dunkin.Donuts, y=Population)) +\n  geom_point(aes(text=paste(Towns, State, sep=\", \")))+ \n               geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +\n               theme_minimal() +\n               ggtitle(\"Dunkin' Donuts versus town population in New England\") +\n               labs(y=\"Population\", x=\"Dunkin' Donuts\")\nddne\n\n```\n\nThat outlier in the top right is Boston.\n\nWill have to readjust by taking out the outlier and trying a polynomial model.\n\n\n```{r fig.width=7, fig.height=6, out.width=900,out.height=600}\n\n\ndcnotboston <- filter(dc, Towns!=\"Boston\")\n\np <- ggplot(data=dcnotboston, aes(x=Dunkin.Donuts, y=Population)) +\n  geom_point(aes(text=paste(Towns, State, sep=\", \")))+ \n  geom_smooth(method=lm, formula = y ~ poly(x, 2), size=1) +\n  theme_minimal() +\n  theme(text=element_text(family=\"Lato\", size=14)) +\n  ggtitle(\"Dunkin' Donuts versus town population in New England\") +\n  labs(y=\"Population\", x=\"Dunkin' Donuts\")\np\n```\n\n****\n\n### Let's apply this model to predict how many Dunkin' Donuts a town should have.\n```{r fig.width=7, fig.height=6, out.width=900,out.height=600}\n\n#Determining which factor of polynomial is most ideal\ndcm_lm1 <- lm(dcnotboston$Dunkin.Donuts ~ poly(dcnotboston$Population, 1))\nsummary(dcm_lm1)\n\ndcm_lm2 <- lm(dcnotboston$Dunkin.Donuts ~ poly(dcnotboston$Population, 2))\nsummary(dcm_lm2)\n\ndcm_lm3 <- lm(dcnotboston$Dunkin.Donuts ~ poly(dcnotboston$Population, 3))\nsummary(dcm_lm3)\n\n#OK, looks like the ideal is 2\n\nnew <- data.frame(Population = dcnotboston$Population)\n\nddpredict <- predict(dcm_lm2, newdata = new, interval=\"confidence\")\n\npredicted <- cbind(dcnotboston, ddpredict)\npredicted <- predicted %>% filter(State==\"CT\")\npredicted$rounded <- round(predicted$upr, digits=0)\npredicted$prediction <-predicted$rounded - predicted$Dunkin.Donuts\npredicted <- predicted[order(predicted$prediction),]\n\ntotal <- predicted[c(\"Towns\", \"Dunkin.Donuts\", \"Population\", \"fit\", \"lwr\", \"upr\", \"rounded\", \"prediction\")]\n\ntotal$fit <- round(total$fit, digits=2)\ntotal$lwr <- round(total$lwr, digits=2)\ntotal$upr <- round(total$upr, digits=2)\n\ndatatable(total)\n\n```\n\n\n\n",
    "created" : 1435150470621.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "46840998",
    "id" : "75DD122E",
    "lastKnownWriteTime" : 1435235544,
    "path" : "~/Documents/Github/dunkin-donuts-ct/dunkin-donuts-ct.Rmd",
    "project_path" : "dunkin-donuts-ct.Rmd",
    "properties" : {
        "tempName" : "Untitled4"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}